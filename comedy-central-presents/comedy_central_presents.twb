<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='episodes (comedy_central_presents_episodes)' inline='true' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='comedy_central_presents_episodes' name='excel-direct.0i53gzk1v13vh614dgi2t0ryyr5j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/owentemple/Documents/My Tableau Repository/Datasources/10.2/en_US-US/comedy_central_presents_episodes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0i53gzk1v13vh614dgi2t0ryyr5j' name='episodes' table='[episodes$]' type='table'>
          <columns gridOrigin='A1:M284:no:A1:M284:0' header='yes' outcome='6'>
            <column datatype='string' name='imdb_id' ordinal='0' />
            <column datatype='string' name='id' ordinal='1' />
            <column datatype='integer' name='episode_number_overall' ordinal='2' />
            <column datatype='integer' name='season' ordinal='3' />
            <column datatype='integer' name='episode_number_in_season' ordinal='4' />
            <column datatype='string' name='performer_name' ordinal='5' />
            <column datatype='date' name='original_air_date' ordinal='6' />
            <column datatype='real' name='user_rating' ordinal='7' />
            <column datatype='integer' name='user_votes' ordinal='8' />
            <column datatype='string' name='imdb_url' ordinal='9' />
            <column datatype='string' name='performer_alternate_name' ordinal='10' />
            <column datatype='integer' name='appearance_number' ordinal='11' />
            <column datatype='string' name='amazon_season_url' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>imdb_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[imdb_id]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>imdb_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>episode_number_overall</remote-name>
            <remote-type>20</remote-type>
            <local-name>[episode_number_overall]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>episode_number_overall</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>episode_number_in_season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[episode_number_in_season]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>episode_number_in_season</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>performer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[performer_name]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>performer_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_air_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[original_air_date]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>original_air_date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[user_rating]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>user_rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[user_votes]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>user_votes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imdb_url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[imdb_url]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>imdb_url</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>performer_alternate_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[performer_alternate_name]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>performer_alternate_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appearance_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[appearance_number]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>appearance_number</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amazon_season_url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[amazon_season_url]</local-name>
            <parent-name>[episodes]</parent-name>
            <remote-alias>amazon_season_url</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[episodes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M284:no:A1:M284:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Episode Number Overall' datatype='integer' name='[episode_number_overall]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column caption='Imdb Id' datatype='string' name='[imdb_id]' role='dimension' type='nominal' />
      <column caption='Imdb Url' datatype='string' name='[imdb_url]' role='dimension' type='nominal' />
      <column caption='Original Air Date' datatype='date' name='[original_air_date]' role='dimension' type='ordinal' />
      <column caption='Performer Alternate Name' datatype='string' name='[performer_alternate_name]' role='dimension' type='nominal' />
      <column caption='Performer Name' datatype='string' name='[performer_name]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='User Rating' datatype='real' name='[user_rating]' role='measure' type='quantitative' />
      <column caption='User Votes' datatype='integer' name='[user_votes]' role='measure' type='quantitative' />
      <column-instance column='[performer_name]' derivation='None' name='[none:performer_name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/owentemple/Documents/My Tableau Repository/Datasources/10.2/en_US-US/episodes (comedy_central_presents_episodes).tde' schema='Extract' tablename='Extract' update-time='05/26/2017 02:48:18 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='283' timestamp-start='2017-05-26 02:48:18.040' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>283.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>283.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>amazon_season_url</remote-name>
              <remote-type>129</remote-type>
              <local-name>[amazon_season_url]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>amazon_season_url</remote-alias>
              <ordinal>1</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;https://www.amazon.com/dp/B000OORIXY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;https://www.amazon.com/dp/B0182SWT3M&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>appearance_number</remote-name>
              <remote-type>16</remote-type>
              <local-name>[appearance_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>appearance_number</remote-alias>
              <ordinal>2</ordinal>
              <family>episodes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>307.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0848056537102473</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.29151514388940136</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.29099964367368603</statistic>
                <statistic aggregation='Var' datatype='real'>0.084981079116858385</statistic>
                <statistic aggregation='VarP' datatype='real'>0.084680792618212236</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>357.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>episode_number_in_season</remote-name>
              <remote-type>16</remote-type>
              <local-name>[episode_number_in_season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>episode_number_in_season</remote-alias>
              <ordinal>3</ordinal>
              <family>episodes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3146.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11.116607773851591</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>28</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.014966761486618</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.0025618591870851</statistic>
                <statistic aggregation='Var' datatype='real'>49.209758664762049</statistic>
                <statistic aggregation='VarP' datatype='real'>49.035872591741686</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48850.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>episode_number_overall</remote-name>
              <remote-type>2</remote-type>
              <local-name>[episode_number_overall]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>episode_number_overall</remote-alias>
              <ordinal>4</ordinal>
              <family>episodes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>283</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>40186.0</statistic>
                <statistic aggregation='Avg' datatype='real'>142.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>283</statistic>
                <statistic aggregation='Stdev' datatype='real'>81.839273375725099</statistic>
                <statistic aggregation='StdevP' datatype='real'>81.694553062000409</statistic>
                <statistic aggregation='Var' datatype='real'>6697.666666666667</statistic>
                <statistic aggregation='VarP' datatype='real'>6674.0</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7595154.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>5</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>283</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;S10E1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;S9E9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imdb_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[imdb_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imdb_id</remote-alias>
              <ordinal>6</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>283</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;tt0299691&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tt1898298&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>imdb_url</remote-name>
              <remote-type>129</remote-type>
              <local-name>[imdb_url]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>imdb_url</remote-alias>
              <ordinal>7</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>283</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;http://www.imdb.com/title/tt0299691/&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;http://www.imdb.com/title/tt1898298/&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>original_air_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[original_air_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>original_air_date</remote-alias>
              <ordinal>8</ordinal>
              <family>episodes</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>208</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1998-12-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2011-03-25#</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='Median' datatype='date'>#2005-05-20#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>performer_alternate_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[performer_alternate_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>performer_alternate_name</remote-alias>
              <ordinal>9</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>283</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adam Ferrara&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zach Galifianakis&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>performer_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[performer_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>performer_name</remote-alias>
              <ordinal>10</ordinal>
              <family>episodes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>260</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adam Ferrara&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zach Galifianakis&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>16</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>11</ordinal>
              <family>episodes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2530.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.9399293286219077</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>15</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.8821188548907779</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.8752539178572221</statistic>
                <statistic aggregation='Var' datatype='real'>15.070846803498483</statistic>
                <statistic aggregation='VarP' datatype='real'>15.017592927867748</statistic>
                <statistic aggregation='Count' datatype='integer'>283</statistic>
                <statistic aggregation='Median' datatype='integer'>9</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26868.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>user_rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[user_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>user_rating</remote-alias>
              <ordinal>12</ordinal>
              <family>episodes</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1900.6999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>6.764056939501776</statistic>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>8.9000000000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.99901196741184384</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.99723278173014129</statistic>
                <statistic aggregation='Var' datatype='real'>0.99802491103208291</statistic>
                <statistic aggregation='VarP' datatype='real'>0.99447322095723567</statistic>
                <statistic aggregation='Count' datatype='integer'>281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13135.890000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>user_votes</remote-name>
              <remote-type>2</remote-type>
              <local-name>[user_votes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>user_votes</remote-alias>
              <ordinal>13</ordinal>
              <family>episodes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8189.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29.142348754448399</statistic>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>466</statistic>
                <statistic aggregation='Stdev' datatype='real'>51.997125815135966</statistic>
                <statistic aggregation='StdevP' datatype='real'>51.904521777589096</statistic>
                <statistic aggregation='Var' datatype='real'>2703.7010930350789</statistic>
                <statistic aggregation='VarP' datatype='real'>2694.079380960221</statistic>
                <statistic aggregation='Count' datatype='integer'>281</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>995683.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500548' measure-ordering='alphabetic' measure-percentage='0.499452' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:performer_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anthony Jeselnik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Scolaro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Naturman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Earthquake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Proops&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeff Dye&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jon Lajoie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Kinane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewis Black&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrice O&apos;Neal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rob Riggle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stella&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tommy Johnagin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adam Ferrara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andy Kindler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton Jackson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donald Glover&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gary Valentine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Whitehall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe DeRosa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kevin Meaney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynne Koplitz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nate Bargatze&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Grant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scott Kennedy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Papa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zach Galifianakis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alonzo Bodden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bret Ernst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D. C. Benny&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dov Davidoff&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greer Barnes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Fitzsimmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jon Dore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kurt Metzger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mario Cantone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nick Thune&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Retta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shaun Majumder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arnez J.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carol Leifer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dat Phan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eliot Chang&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hari Kondabolu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jessi Klein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Sneed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leo Allen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike DeStefano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nick DiPaolo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rocky LaPorte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve McGrew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ty Barnett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ardal O&apos;Hanlon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bruce Bruce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dane Cook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eddie Brill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Warren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeff Garcia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jon Reep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laura Kightlinger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marc Maron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick Dixon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rob Stapleton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tess&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tony Rock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amy Schumer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brian Kiley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dan Cummins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Fraser&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greg Behrendt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greg Giraldo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Mulaney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Cease&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mark Curry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Otis Lee Crenshaw&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rory Albanese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sheng Wang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bill Santiago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chris Porter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dom Irrera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freddy Soto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iliza Shlesinger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jimmy Shubert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kevin Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louis Katz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myq Kaplan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Harris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ryan Stout&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Sklar Brothers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wayne Federman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adele Givens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arj Barker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corey Holcomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gene Pompa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackie Kashian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Matarese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kevin Nealon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Kosta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paul Gilmartin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reggie McFadden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seán Cullen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Todd Glass&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tom Rhodes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bil Dwyer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chelsea Peretti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deon Cole&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finesse Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hugh Fink&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jimmy Dore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kathleen Madigan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loni Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mo Mandel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peter Berman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rudy Rush&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephen Lynch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vince Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew Kennedy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Kahaney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dan Levy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dwayne Kennedy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jasper Redd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeff Cesario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmy Carr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Dunnigan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Braunger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Owen Benjamin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richard Jeni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sheryl Underwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tom Segura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Becky Pedigo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad Daniels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dave Attell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elvira Kurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harland Williams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim David&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Judy Gold&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Megan Mooney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Vecchione&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nick Swardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rod Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sue Murphy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanessa Hollingshead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ben Bailey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlie Viracola&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;David Feldman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Erin Foley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry Phillips&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Gaffigan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Julian McCullough&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lisa Landry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mitch Fatel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul F. Tompkins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ron White&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tammy Pescatelli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vic Henley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bill Burr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chris D&apos;Elia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeRay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frank Caliendo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ian Bagg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jimmy Pardo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keith Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louis C.K.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;My First Time (special)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rachel Feinstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russ Meneve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ted Alexandro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wanda Sykes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Billy Gardell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christian Finnegan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Don &apos;D.C.&apos; Curry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabriel Iglesias&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Coen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jo Koy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin Hart&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louis Ramey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Natasha Leggero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rebecca Corry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sabrina Matthews&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tig&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Todd Barry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aries Spears&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlos Alazraqui&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daniel Tosh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eddie Gossling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gregg Rogell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeff Stilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan Rubin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lavell Crawford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maria Bamford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patton Oswalt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robert Hawkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Byrne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Woods&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bo Burnham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian Regan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dan Mintz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dwayne Perkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jay Larson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeff Dunham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Heffron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Grooms&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matt Fulchiron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pablo Francisco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rickey Smiley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovin &amp; Allen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tom Shillue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Jackson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bob Oschack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brian Posehn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug Stanhope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gilbert Gottfried&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jake Johannsen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joey Kola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kirk Fox&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Margaret Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nick Griffin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;René Hicks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sebastian Maniscalco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Todd Lynn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Big Jay Oakerson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chelsea Handler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Demetri Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eugene Mirman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Howard Kremer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnny Sanchez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Juston McKinney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lizz Winstead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mitch Hedberg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pete Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rich Vos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Amazing Johnathan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victoria Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bob Marley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlos Mencia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darrell Hammond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eddie Ifft&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hard &apos;n Phirm&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeremy Hotz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Blue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lenny Clarke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mike Birbiglia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pete Holmes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Kelly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Marmel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tracy Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Madrigal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bonnie McFarlane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Craig Shoemaker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Doug Benson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Godfrey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamie Lissow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Caparulo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kristen Schaal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Britt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul Mecurio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno Collier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shane Mauss&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tom Cotter&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Best Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='episodes (comedy_central_presents_episodes)' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1mxwi0g8b9sb12o1sw51pchqj9'>
            <column-instance column='[user_rating]' derivation='Avg' name='[avg:user_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:ok]' pivot='key' type='ordinal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column caption='User Rating' datatype='real' name='[user_rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:season:ok]' direction='DESC' using='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' value='n#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
              <text column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</rows>
        <cols>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:season:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Highest Rated Performances'>
      <table>
        <view>
          <datasources>
            <datasource caption='episodes (comedy_central_presents_episodes)' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1mxwi0g8b9sb12o1sw51pchqj9'>
            <column datatype='string' name='[amazon_season_url]' role='dimension' type='nominal' />
            <column-instance column='[amazon_season_url]' derivation='Attribute' name='[attr:amazon_season_url:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[episode_number_in_season]' role='measure' type='quantitative' />
            <column-instance column='[performer_alternate_name]' derivation='None' name='[none:performer_alternate_name:nk]' pivot='key' type='nominal' />
            <column caption='Performer Alternate Name' datatype='string' name='[performer_alternate_name]' role='dimension' type='nominal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[episode_number_in_season]' derivation='Sum' name='[sum:episode_number_in_season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_rating]' derivation='Sum' name='[sum:user_rating:qk]' pivot='key' type='quantitative' />
            <column caption='User Rating' datatype='real' name='[user_rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Adam Ferrara&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Brian Regan&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Daniel Tosh&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Demetri Martin&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Gabriel Iglesias&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Jeremy Hotz&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Jim Gaffigan&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;John Mulaney&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Kyle Cease&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Lewis Black: 2&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Lewis Black: 3&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Louis Ramey&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Mitch Hedberg&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Nick Swardson&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Nick Swardson: 2&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Pablo Francisco&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Stephen Lynch&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Steve McGrew&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Tom Cotter&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Zach Galifianakis&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]' direction='DESC' using='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]' />
          <slices>
            <column>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]' />
              <tooltip column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[attr:amazon_season_url:nk]' />
              <tooltip column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:season:qk]' />
              <tooltip column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:episode_number_in_season:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</rows>
        <cols>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Episodes by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='episodes (comedy_central_presents_episodes)' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1mxwi0g8b9sb12o1sw51pchqj9'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Original Air Date' datatype='date' name='[original_air_date]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[original_air_date]' derivation='Year' name='[yr:original_air_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:Number of Records:qk]</rows>
        <cols>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[yr:original_air_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Performers with Highest Number of Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='episodes (comedy_central_presents_episodes)' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1mxwi0g8b9sb12o1sw51pchqj9'>
            <column-instance column='[user_rating]' derivation='Avg' name='[avg:user_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[performer_alternate_name]' derivation='None' name='[none:performer_alternate_name:nk]' pivot='key' type='nominal' />
            <column caption='Performer Alternate Name' datatype='string' name='[performer_alternate_name]' role='dimension' type='nominal' />
            <column-instance column='[user_votes]' derivation='Sum' name='[sum:user_votes:qk]' pivot='key' type='quantitative' />
            <column caption='User Rating' datatype='real' name='[user_rating]' role='measure' type='quantitative' />
            <column caption='User Votes' datatype='integer' name='[user_votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Brian Regan&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Carlos Mencia&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Dane Cook&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Daniel Tosh&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Dat Phan&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Dave Attell&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Demetri Martin&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Elvira Kurt&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Gabriel Iglesias&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Jeremy Hotz&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Jim Gaffigan&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Lewis Black&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Lewis Black: 2&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Lewis Black: 3&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Louis C.K.&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Mitch Hedberg&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Nick Swardson&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Pablo Francisco&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Patton Oswalt&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Stephen Lynch&quot;' />
              <groupfilter function='member' level='[none:performer_alternate_name:nk]' member='&quot;Zach Galifianakis&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]' direction='DESC' using='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]' />
          <slices>
            <column>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
              <text column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</rows>
        <cols>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Performers with Multiple Appearances on the Series'>
      <table>
        <view>
          <datasources>
            <datasource caption='episodes (comedy_central_presents_episodes)' name='federated.0v1mxwi0g8b9sb12o1sw51pchqj9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1mxwi0g8b9sb12o1sw51pchqj9'>
            <column datatype='integer' name='[appearance_number]' role='measure' type='quantitative' />
            <column-instance column='[user_rating]' derivation='Avg' name='[avg:user_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[appearance_number]' derivation='None' name='[none:appearance_number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[performer_name]' derivation='None' name='[none:performer_name:nk]' pivot='key' type='nominal' />
            <column caption='Performer Name' datatype='string' name='[performer_name]' role='dimension' type='nominal' />
            <column caption='User Rating' datatype='real' name='[user_rating]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:appearance_number:qk]' included-values='in-range'>
            <min>2</min>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:appearance_number:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
              <size column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' />
              <text column='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Highest Rated Performances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:amazon_season_url:nk]</field>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of Episodes by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[yr:original_air_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Best Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:season:ok]</field>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[yr:original_air_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performers with Highest Number of Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.2000000000000002</value>
                <value>&quot;Patton Oswalt&quot;</value>
                <value>75</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.7000000000000002</value>
                <value>&quot;Louis C.K.&quot;</value>
                <value>75</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.7999999999999998</value>
                <value>&quot;Lewis Black&quot;</value>
                <value>76</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.4000000000000004</value>
                <value>&quot;Daniel Tosh&quot;</value>
                <value>76</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.5999999999999996</value>
                <value>&quot;Dave Attell&quot;</value>
                <value>79</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.5</value>
                <value>&quot;Nick Swardson&quot;</value>
                <value>80</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.7000000000000002</value>
                <value>&quot;Dat Phan&quot;</value>
                <value>81</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.3000000000000007</value>
                <value>&quot;Jeremy Hotz&quot;</value>
                <value>82</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.3000000000000007</value>
                <value>&quot;Demetri Martin&quot;</value>
                <value>99</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.3000000000000007</value>
                <value>&quot;Lewis Black: 2&quot;</value>
                <value>110</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.5</value>
                <value>&quot;Gabriel Iglesias&quot;</value>
                <value>115</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.0</value>
                <value>&quot;Carlos Mencia&quot;</value>
                <value>125</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3.0</value>
                <value>&quot;Elvira Kurt&quot;</value>
                <value>127</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.9000000000000004</value>
                <value>&quot;Stephen Lynch&quot;</value>
                <value>157</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.6999999999999993</value>
                <value>&quot;Brian Regan&quot;</value>
                <value>169</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.5</value>
                <value>&quot;Jim Gaffigan&quot;</value>
                <value>176</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.4000000000000004</value>
                <value>&quot;Lewis Black: 3&quot;</value>
                <value>213</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.3000000000000007</value>
                <value>&quot;Zach Galifianakis&quot;</value>
                <value>239</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.8000000000000007</value>
                <value>&quot;Pablo Francisco&quot;</value>
                <value>409</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7.2000000000000002</value>
                <value>&quot;Dane Cook&quot;</value>
                <value>428</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
                  <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[sum:user_votes:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8.8000000000000007</value>
                <value>&quot;Mitch Hedberg&quot;</value>
                <value>466</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]</field>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_alternate_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performers with Multiple Appearances on the Series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:appearance_number:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[avg:user_rating:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:appearance_number:qk]</field>
            <field>[federated.0v1mxwi0g8b9sb12o1sw51pchqj9].[none:performer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Best Season' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Performances' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Episodes by Year' width='192'>
      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
      mjgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Performers with Highest Number of Reviews' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performers with Multiple Appearances on the Series' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
